{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogItem","to","wrapper","wrapper__image","src","avatar","alt","wrapper__name","name","Message","dialog","message","maxLength150","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","btn","Dialogs","state","dialogsPage","dialogs","messages","dialogsElements","map","messagesElemensts","dialogs__items","values","sendMessage","newMessageBody","withAuthRedirect","Component","this","isAuth","React","DialogsContainer","compose","connect","auth"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,uB,oBCAtPD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,eAAiB,qC,gICuBtGC,EApBI,SAACC,GAEhB,IAAMC,EAAO,YAAcD,EAAME,GAEjC,OACI,qBAAKC,UAAWC,IAAEC,WAAlB,SACI,cAAC,IAAD,CAASC,GAAIL,EAAb,SACI,sBAAKE,UAAWC,IAAEG,QAAlB,UACI,qBAAKJ,UAAWC,IAAEI,eAAlB,SACI,qBAAKC,IAAKT,EAAMU,OAAQC,IAAI,aAEhC,qBAAKR,UAAWC,IAAEQ,cAAlB,SACI,4BAAIZ,EAAMa,iBCPnBC,EANC,SAACd,GACb,OACI,qBAAKG,UAAWC,IAAEW,OAAlB,SAA2Bf,EAAMgB,W,iCCCnCC,EAAeC,YAAiB,KAkBvBC,cAAU,CAAEC,KAAM,wBAAlBD,EAhBQ,SAACnB,GAEpB,OACI,uBAAMqB,SAAWrB,EAAMsB,aAAvB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOV,KAAM,iBAAkBW,UAAYC,IAC3CC,SAAW,CAAEC,IAAUV,GACvBW,YAAY,yBAEhB,8BACI,wBAAQzB,UAAWC,IAAEyB,IAArB,0BCiBDC,EA7BC,SAAC9B,GACb,IAAM+B,EAAQ/B,EAAMgC,YACZC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAEXC,EAAkBF,EAAQG,KAAI,SAAArB,GAAM,OAAI,cAAC,EAAD,CAAYF,KAAME,EAAOF,KAAsBX,GAAIa,EAAOb,GAAIQ,OAAQK,EAAOL,QAAzCK,EAAOb,OACnFmC,EAAoBH,EAASE,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQd,OAMlG,OACI,sBAAKC,UAAWC,IAAE6B,QAAlB,UACI,qBAAK9B,UAAWC,IAAEkC,eAAlB,SACKH,IAGL,sBAAKhC,UAAWC,IAAEY,QAAlB,UACKqB,EAED,cAAC,EAAD,CAAgBhB,SAbN,SAACkB,GACnBvC,EAAMwC,YAAYD,EAAOE,0B,8CCElBC,EAZU,SAACC,GASvB,OATqC,4JAElC,WACG,OAAKC,KAAK5C,MAAM6C,OAET,cAACF,EAAD,eAAeC,KAAK5C,QAFI,cAAC,IAAD,CAAUM,GAAI,eAHd,GACLwC,IAAMH,Y,QCQnCI,EAAmBC,YACrBC,aARoB,SAAClB,GACrB,MAAO,CACHC,YAAaD,EAAMC,YACnBa,OAAQd,EAAMmB,KAAKL,UAKE,CAAEL,kBAC3BE,EAFqBM,CAGvBlB,GAEaiB","file":"static/js/5.c8a6fbf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Jrf3\",\"dialogs__items\":\"Dialogs_dialogs__items__2EQw3\",\"active\":\"Dialogs_active__1fJCG\",\"dialog\":\"Dialogs_dialog__15572\",\"messages\":\"Dialogs_messages__2V-vT\",\"message\":\"Dialogs_message__4Mftw\",\"btn\":\"Dialogs_btn__3DHK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3uP7f\",\"wrapper\":\"DialogItem_wrapper__3-wF_\",\"wrapper__image\":\"DialogItem_wrapper__image__M_mVN\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.scss';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    const path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogItem}>\r\n            <NavLink to={path} >\r\n                <div className={s.wrapper}>\r\n                    <div className={s.wrapper__image}>\r\n                        <img src={props.avatar} alt=\"avatar\"/>\r\n                    </div>\r\n                    <div className={s.wrapper__name}>\r\n                        <p>{props.name}</p>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst maxLength150 = maxLengthCreator(150);\r\n\r\nconst AddMessageForm = (props) => {\r\n   \r\n    return (\r\n        <form onSubmit={ props.handleSubmit }>\r\n            <div> \r\n                <Field name={'newMessageBody'} component={ Textarea }\r\n                validate={ [ required, maxLength150 ] } \r\n                placeholder='Enter your message'/>\r\n            </div>\r\n            <div> \r\n                <button className={s.btn}>Send</button> \r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    const state = props.dialogsPage;\r\n    const { dialogs, messages } = state;\r\n\r\n    const dialogsElements = dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avatar={dialog.avatar}/> );\r\n    const messagesElemensts = messages.map(message => <Message message={message.message} key={message.id}/> );\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__items}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.message}>\r\n                {messagesElemensts}\r\n\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nconst withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n\r\n   return RedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;","import { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, { sendMessage }),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, \r\n//     { updateNewMessageBody, sendMessage })(AuthRedirectComponent);\r\n\r\n\r\n// DialogsContainer - контейнерна компонента, яка повертає Презентаційну компоненту та передає у неї інформацію про store через props\r\n// Тому, що Презентаційна компонента не \"Знає\" про store, а тільки має приймати інформацію, яка приходить до неї через props\r\n\r\n// У mapStateToProps приходить State\r\n// У mapDispatchToProps приходить Dispatch\r\n\r\n// В props Dialogs попадуть обєкти, які повертають два callback (mapStateToProps та mapDispatchToProps)\r\n// Тобто в Dialogs props будуть props.dialogsPage / props.mapStateToProps / props.mapDispatchToProps"],"sourceRoot":""}